{"version":3,"sources":["webpack:///./src/pages/projects.js"],"names":["HeroBanner","styled","section","Projects","query","render","data","items","allFile","name","content","rel","href","favicon","type","id","className","edges","map","item","info","node","childMarkdownRemark","frontmatter","key","title","html"],"mappings":"0RAWMA,EAAaC,IAAOC,QAAV,uEAAGD,CAAH,gFA4FDE,UAlCE,kBACf,kBAAC,IAAD,CACEC,MAAK,aA4BLC,OAAQ,SAAAC,GAAI,OAjFH,SAAAA,GACX,IAAIC,EAAQD,EAAKE,QACjB,OACE,6BACE,kBAAC,IAAD,KACE,iDACA,0BAAMC,KAAK,cAAcC,QAAQ,8BACjC,0BAAMC,IAAI,OAAOC,KAAMC,MACvB,4BAAQC,KAAK,uBAAb,2eAiBF,kBAAC,IAAD,MACA,kBAACd,EAAD,CAAYe,GAAG,OAAOC,UAAU,kBAC9B,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YAAYD,GAAG,iBAC5B,wBAAIC,UAAU,wBAAd,eAMN,yBAAKA,UAAU,aACb,yBAAKA,UAAU,wBACZT,EAAMU,MAAMC,KAAI,SAAAC,GAAI,OACnB,kBAAC,IAAD,CACEC,KAAMD,EAAKE,KAAKC,oBAAoBC,YACpCC,IAAKL,EAAKE,KAAKC,oBAAoBC,YAAYE,aAKvD,kBAAC,IAAD,MACA,kBAAC,IAAD,OAmCcC,CAAKpB,IA7BvB,W","file":"component---src-pages-projects-js-f6f825404d675e7eebdd.js","sourcesContent":["import React from \"react\"\nimport \"../utils/scss/style.scss\"\nimport styled from \"styled-components\"\nimport ProjectItem from \"../components/partials/project.item\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Footer from \"../components/footer\"\nimport BackButton from \"../components/partials/back.button\"\nimport ButtonTop from \"../components/partials/scrolltop.button\"\nimport Helmet from \"react-helmet\"\nimport favicon from \"../utils/imagens/favicon.ico\"\n\nconst HeroBanner = styled.section`\n  background-repeat: no-repeat;\n  color: white;\n  min-height: 400px;\n  margin-bottom: 5%;\n`\n\nconst html = data => {\n  let items = data.allFile\n  return (\n    <div>\n      <Helmet>\n        <title>Alexandre Reis</title>\n        <meta name=\"description\" content=\"Alexandre Reis - Projects\" />\n        <link rel=\"icon\" href={favicon} />\n        <script type=\"application/ld+json\">\n          {`\n              {\n                \"@context\": \"https://schema.org/\",\n                \"@type\": \"Person\",\n                \"name\": \"Alexandre Reis\",\n                \"url\": \"https://alexandreis.me/projects\",\n                \"image\": \"\",\n                \"sameAs\": \"http://alexandreis.me/projects\",\n                \"jobTitle\": \"Backend Developer\",\n                \"worksFor\": {\n                \"@type\": \"Organization\",\n                \"name\": \"LOBA\"\n              }\n              `}\n        </script>\n      </Helmet>\n      <BackButton/>\n      <HeroBanner id=\"hero\" className=\"hero is-large \">\n        <div className=\"hero-body\">\n          <div className=\"container\" id=\"projects-page\">\n            <h1 className=\"title has-text-white\">\n              Projects\n            </h1>\n          </div>\n        </div>\n      </HeroBanner>\n      <div className=\"container\">\n        <div className=\"columns is-multiline\">\n          {items.edges.map(item => (\n            <ProjectItem\n              info={item.node.childMarkdownRemark.frontmatter}\n              key={item.node.childMarkdownRemark.frontmatter.title}\n            />\n          ))}\n        </div>\n      </div>\n      <Footer/>\n      <ButtonTop/>\n    </div>\n  )\n}\n\nconst Projects = () => (\n  <StaticQuery\n    query={graphql`\n      {\n        allFile(filter: {sourceInstanceName: {eq: \"markdown\"}, extension: {eq: \"md\"}, relativeDirectory: {regex: \"/projects/\"}}, sort: {fields: dir}) {\n          edges {\n            node {\n              id\n              childMarkdownRemark {\n                frontmatter {\n                  title\n                  live\n                  source\n                  stack\n                  image {\n                    childImageSharp {\n                      fluid(maxWidth: 800, quality: 80) {\n                        ...GatsbyImageSharpFluid\n                      }\n                    }\n                  }\n                  description\n                }\n                html\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => html(data)}\n  ></StaticQuery>\n)\n\nexport default Projects\n"],"sourceRoot":""}